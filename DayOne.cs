using System;
using System.Diagnostics;

namespace Advent
{
    public class DayOne
    {
        public static string Input => "27636   67663\r\n92436   51410\r\n68957   77912\r\n36747   51149\r\n30882   77912\r\n46213   99914\r\n86101   84506\r\n33651   96019\r\n21290   82431\r\n63075   53396\r\n71804   79079\r\n59491   99914\r\n38723   14006\r\n33281   26247\r\n83935   50770\r\n86374   85083\r\n25576   54727\r\n73648   86649\r\n22409   70249\r\n29227   64316\r\n35430   67143\r\n56749   86649\r\n54666   96019\r\n34014   95399\r\n79952   39373\r\n11527   93723\r\n62980   57578\r\n30486   71734\r\n32658   65436\r\n93735   27438\r\n61456   18953\r\n25491   56656\r\n76585   62810\r\n25849   18414\r\n31715   71902\r\n70587   95582\r\n80976   14987\r\n38641   41417\r\n67621   73094\r\n85775   53902\r\n17220   40408\r\n88727   97556\r\n22359   67543\r\n91113   12527\r\n62161   31532\r\n11773   15282\r\n89645   63687\r\n25738   16174\r\n90797   16652\r\n57466   93723\r\n51356   19628\r\n25218   41212\r\n23778   85100\r\n69307   79895\r\n13469   20787\r\n88354   57627\r\n21993   13027\r\n55533   37964\r\n69092   70902\r\n48561   79752\r\n65224   87109\r\n87087   63928\r\n51086   13027\r\n29509   99914\r\n70303   58298\r\n70347   61384\r\n26945   76706\r\n70853   57779\r\n73422   69817\r\n44312   25891\r\n59429   14006\r\n37343   70249\r\n19979   70249\r\n69957   39312\r\n18726   53276\r\n83466   77883\r\n61518   13900\r\n42155   89500\r\n63098   60521\r\n14449   98681\r\n82637   43106\r\n22191   50560\r\n73961   11938\r\n45981   65414\r\n52835   21932\r\n64522   66095\r\n72719   18593\r\n95067   14254\r\n67827   67002\r\n91626   16259\r\n46648   97579\r\n64260   16945\r\n51036   96019\r\n11763   16672\r\n22050   54727\r\n81115   40408\r\n24109   99038\r\n61490   16520\r\n12415   86649\r\n70936   46470\r\n67369   17839\r\n66661   65147\r\n46002   97383\r\n92236   32003\r\n76595   80883\r\n99797   80845\r\n47203   21390\r\n12531   13900\r\n14567   85100\r\n97701   14006\r\n36042   77912\r\n68698   58773\r\n83171   93348\r\n46016   85412\r\n74415   15656\r\n54278   51529\r\n97371   98662\r\n71146   19396\r\n34619   49766\r\n27335   55419\r\n14750   15656\r\n20499   47003\r\n65181   18169\r\n25908   34850\r\n48966   46960\r\n56623   67545\r\n84778   14006\r\n23425   55003\r\n57291   77912\r\n34146   20637\r\n30067   85100\r\n43424   35599\r\n73421   14006\r\n91453   13935\r\n78330   51410\r\n76088   28885\r\n18833   13272\r\n20958   75765\r\n96718   30755\r\n56023   67143\r\n43806   52016\r\n14604   59721\r\n44139   12527\r\n65784   77912\r\n29570   76135\r\n47348   70249\r\n43549   86649\r\n76570   70249\r\n88162   71939\r\n34486   60331\r\n26741   92387\r\n41198   13377\r\n53021   50770\r\n98314   23805\r\n52060   12527\r\n86515   86649\r\n98183   99252\r\n79091   41638\r\n56721   32794\r\n69895   88727\r\n30104   55899\r\n48178   11818\r\n99914   18935\r\n18953   99914\r\n59782   97763\r\n69560   77912\r\n84587   39848\r\n16112   36887\r\n97943   88572\r\n48829   84079\r\n61496   50770\r\n16975   65569\r\n20602   88536\r\n28286   55419\r\n46401   96019\r\n33053   57040\r\n20081   70249\r\n20222   50466\r\n87107   65780\r\n70108   20762\r\n60443   18222\r\n86645   18222\r\n86432   61462\r\n10447   40408\r\n26601   30399\r\n20669   51410\r\n64973   54727\r\n26844   67876\r\n66711   15656\r\n50935   70954\r\n64188   27385\r\n72301   76224\r\n68529   19569\r\n60079   90182\r\n31692   56893\r\n32049   55692\r\n99568   24749\r\n68169   51227\r\n90063   70816\r\n70353   76443\r\n45207   83046\r\n10840   44770\r\n29710   88168\r\n84751   77912\r\n22547   39355\r\n32776   54727\r\n10792   96019\r\n86847   34709\r\n90912   94687\r\n61472   33330\r\n17627   82577\r\n59955   82580\r\n84314   67146\r\n17585   12527\r\n85936   90872\r\n19621   24662\r\n91812   81993\r\n32625   19895\r\n15656   32549\r\n99742   94319\r\n66920   85100\r\n24557   21855\r\n64760   54727\r\n83318   85721\r\n41316   96019\r\n70737   80023\r\n77115   60150\r\n48008   50770\r\n65812   50858\r\n49725   63057\r\n59430   29710\r\n56813   71902\r\n18412   69153\r\n74854   88293\r\n53478   61306\r\n46955   13896\r\n58632   18937\r\n19960   45246\r\n50522   14006\r\n13027   14006\r\n50345   25891\r\n32301   73422\r\n56811   74923\r\n33257   26767\r\n85044   57082\r\n44874   23425\r\n90402   83509\r\n35786   99914\r\n27689   73422\r\n12527   48603\r\n56563   40588\r\n49173   58298\r\n25094   21932\r\n52615   28332\r\n87738   47861\r\n15259   86649\r\n56450   12469\r\n99476   13027\r\n31357   20788\r\n29302   88536\r\n69527   99914\r\n79016   86091\r\n86187   75381\r\n37040   13900\r\n40789   17863\r\n52819   88536\r\n99512   67289\r\n43526   49745\r\n93256   92442\r\n86400   71902\r\n13900   32003\r\n86362   46470\r\n84806   89066\r\n13325   73969\r\n38597   82656\r\n26209   71126\r\n67143   49421\r\n12555   73422\r\n49109   47621\r\n12757   93723\r\n60966   54727\r\n91829   82268\r\n16715   15691\r\n68953   93723\r\n29390   76089\r\n17838   65569\r\n51410   31825\r\n87719   13027\r\n20487   39355\r\n56471   24545\r\n21675   43800\r\n13445   54727\r\n20493   65829\r\n12310   73945\r\n29366   93723\r\n55574   74438\r\n20558   40408\r\n60707   60326\r\n67675   28319\r\n68219   99051\r\n55901   12056\r\n36090   67102\r\n21645   93723\r\n91741   70249\r\n86631   68917\r\n16190   73338\r\n69156   78863\r\n25891   12529\r\n60505   76667\r\n91367   54996\r\n35197   12527\r\n96289   65569\r\n99720   13027\r\n60152   67328\r\n47373   40408\r\n46470   29710\r\n92309   49534\r\n96399   17417\r\n19136   80925\r\n75645   55419\r\n60134   51410\r\n44963   25891\r\n57213   36908\r\n32935   13027\r\n13760   16748\r\n10501   48177\r\n24699   88567\r\n87817   63343\r\n98506   96019\r\n13109   51410\r\n98827   88536\r\n81592   29559\r\n32418   96845\r\n23249   35212\r\n33739   18823\r\n91660   94468\r\n41270   14006\r\n61624   45215\r\n94473   82748\r\n81411   22202\r\n62042   79434\r\n87156   78604\r\n96708   39355\r\n21576   94644\r\n58090   88727\r\n75796   88727\r\n36732   65569\r\n98878   93723\r\n77836   40408\r\n12739   71850\r\n14393   65616\r\n54759   54727\r\n91950   67999\r\n32038   71414\r\n88128   88727\r\n18687   51410\r\n86649   10180\r\n54652   14006\r\n51200   94013\r\n25759   73695\r\n78325   88536\r\n85100   15068\r\n77314   70249\r\n29771   25891\r\n48512   39931\r\n32758   23781\r\n65569   81723\r\n76547   81341\r\n97796   93723\r\n23560   86649\r\n85749   75599\r\n90577   14006\r\n89148   88727\r\n87413   25602\r\n80005   86649\r\n18222   50953\r\n84166   12223\r\n21431   55419\r\n51539   88536\r\n39002   77912\r\n40699   93886\r\n78076   33894\r\n50213   58400\r\n20711   12527\r\n66242   50770\r\n58894   95457\r\n20142   13027\r\n75889   82440\r\n42984   27810\r\n26613   18222\r\n17725   46470\r\n78045   58527\r\n70755   96361\r\n34750   71902\r\n23788   36870\r\n71435   15656\r\n69573   76045\r\n97075   41621\r\n68889   74341\r\n43705   71777\r\n51174   15068\r\n25175   77912\r\n46042   18071\r\n43652   91644\r\n17776   13027\r\n21586   32003\r\n55557   44791\r\n15068   26861\r\n31285   37296\r\n41268   12527\r\n12274   70661\r\n64942   83051\r\n40158   27491\r\n97113   12527\r\n64437   50770\r\n29587   52457\r\n93723   18953\r\n26593   61122\r\n77159   36445\r\n70733   11733\r\n58626   69962\r\n88075   10820\r\n27706   71880\r\n62175   19584\r\n29037   77912\r\n39846   88536\r\n52710   17260\r\n37988   12527\r\n98941   40408\r\n55492   27433\r\n49614   49375\r\n73031   53756\r\n69107   93963\r\n13487   13027\r\n88557   52956\r\n19978   54109\r\n70308   61626\r\n97197   75015\r\n29461   13027\r\n49851   33862\r\n61641   43710\r\n97372   21774\r\n24845   11676\r\n23306   33519\r\n79069   85100\r\n90401   66032\r\n70009   38628\r\n74208   90870\r\n66927   34883\r\n83113   78562\r\n67665   13027\r\n50134   79665\r\n39442   94713\r\n34392   81306\r\n74601   88727\r\n15396   42882\r\n75388   94071\r\n60137   52050\r\n11501   44410\r\n70249   86649\r\n34514   95654\r\n58802   59932\r\n60092   82834\r\n59700   84142\r\n73594   84251\r\n41063   23656\r\n24258   85833\r\n77170   71729\r\n57174   93723\r\n52939   49958\r\n17073   40408\r\n91476   19173\r\n67849   46955\r\n42366   85100\r\n31967   18222\r\n51791   29710\r\n80503   21818\r\n21171   29593\r\n35814   88536\r\n50383   18222\r\n68500   73422\r\n60941   38247\r\n80579   25728\r\n56150   40408\r\n91392   58387\r\n97794   36481\r\n24938   16433\r\n20897   29710\r\n69005   86270\r\n23332   82430\r\n96092   40408\r\n55606   47408\r\n69393   25538\r\n88805   93865\r\n25377   70249\r\n74563   88727\r\n89699   53054\r\n45796   55419\r\n56407   67840\r\n72925   97565\r\n88536   75060\r\n33881   70279\r\n19496   13027\r\n26289   44211\r\n51334   88536\r\n12579   46470\r\n69622   39657\r\n17900   77122\r\n67747   89325\r\n79881   21053\r\n61202   42967\r\n70883   87544\r\n16535   93383\r\n26503   45342\r\n28297   61791\r\n50933   96173\r\n32002   32699\r\n34690   57980\r\n28399   29710\r\n13660   21932\r\n98065   27996\r\n50853   35963\r\n88438   86562\r\n36165   73677\r\n79940   40408\r\n40541   67170\r\n20091   91424\r\n39355   99566\r\n13081   14006\r\n58083   81235\r\n54830   49834\r\n32825   96019\r\n83692   43716\r\n95628   73356\r\n74443   89957\r\n35677   36499\r\n75279   88536\r\n71821   80590\r\n84260   98484\r\n59645   59826\r\n35932   50116\r\n75575   22994\r\n73616   84555\r\n51144   93243\r\n60005   14006\r\n12864   10684\r\n77834   48318\r\n69011   41387\r\n97024   46470\r\n98000   64609\r\n26029   33500\r\n33877   94750\r\n55830   93723\r\n15334   85100\r\n89061   23221\r\n11922   77337\r\n47976   22799\r\n11635   91933\r\n75213   24886\r\n90993   41805\r\n90684   25891\r\n72604   76753\r\n42647   85843\r\n40408   68133\r\n75946   51218\r\n70196   25891\r\n30412   57914\r\n97066   18953\r\n38230   13899\r\n29377   11580\r\n75574   72968\r\n29393   72845\r\n77297   89211\r\n16269   94844\r\n82893   88061\r\n37116   76838\r\n80997   20602\r\n97618   91685\r\n33698   51410\r\n61935   12527\r\n44252   79583\r\n46297   65424\r\n21075   15121\r\n61997   65569\r\n82784   24455\r\n32616   50770\r\n65600   52179\r\n70762   93723\r\n33830   14006\r\n59127   76111\r\n79111   42235\r\n14634   65569\r\n61114   98404\r\n34701   57155\r\n66321   32003\r\n71411   77114\r\n36070   54003\r\n44096   31057\r\n17790   54727\r\n94384   50770\r\n55954   71902\r\n48200   87183\r\n77912   12527\r\n68228   18280\r\n98972   44903\r\n36198   50770\r\n38106   65335\r\n25785   12527\r\n76187   77603\r\n23889   85100\r\n68678   41314\r\n22106   18953\r\n24718   77912\r\n23942   40408\r\n78992   55995\r\n69199   55700\r\n53735   79770\r\n44697   51111\r\n32874   28161\r\n65350   46470\r\n31226   70249\r\n25736   68636\r\n35753   99319\r\n84252   54258\r\n28351   73446\r\n36754   11085\r\n81734   37763\r\n20447   86649\r\n93586   53062\r\n68321   90392\r\n60154   94363\r\n94162   12527\r\n49437   88536\r\n36753   77770\r\n52652   51410\r\n44124   77727\r\n41114   39334\r\n16864   77072\r\n83149   65132\r\n59730   54727\r\n84057   23618\r\n30656   12284\r\n92801   37685\r\n49414   78016\r\n21932   88727\r\n83899   99914\r\n50417   73542\r\n42247   36961\r\n11620   12527\r\n89175   55534\r\n29239   54727\r\n52046   39122\r\n10565   13027\r\n94606   34488\r\n80368   51410\r\n19058   70249\r\n52560   88727\r\n94907   94594\r\n22583   59070\r\n87045   57573\r\n81908   66470\r\n52664   14006\r\n85444   50714\r\n79620   41857\r\n64520   28656\r\n77565   40408\r\n54891   79480\r\n60407   67143\r\n94156   85508\r\n78606   12527\r\n49973   99914\r\n18848   12527\r\n16148   13383\r\n39583   88536\r\n71135   76625\r\n15135   88536\r\n81304   13900\r\n78906   24249\r\n70225   84691\r\n82947   40735\r\n56886   59761\r\n87699   68570\r\n48939   46470\r\n72665   99460\r\n29077   13027\r\n37693   86226\r\n49023   23978\r\n14671   63325\r\n95319   61292\r\n40288   73784\r\n40842   70647\r\n52129   68530\r\n59166   91619\r\n21052   11307\r\n98213   99699\r\n61504   13900\r\n27254   99914\r\n30050   25730\r\n75338   80979\r\n91814   16267\r\n84916   50770\r\n51427   88782\r\n51277   82884\r\n50738   85720\r\n71902   32003\r\n61287   54727\r\n48427   93265\r\n34807   51980\r\n56975   96019\r\n58937   51410\r\n64930   22005\r\n72532   55499\r\n40608   56661\r\n53656   88727\r\n62477   96019\r\n48812   88536\r\n37482   25188\r\n32909   71902\r\n60132   12743\r\n36648   92407\r\n26489   46955\r\n25601   23377\r\n17624   71902\r\n69982   63535\r\n23798   12527\r\n14088   46470\r\n79596   12527\r\n47284   18073\r\n66594   82908\r\n47309   21386\r\n41035   86649\r\n95662   18222\r\n19255   70249\r\n59514   22092\r\n83736   32111\r\n19643   64859\r\n30590   26610\r\n16132   94311\r\n61696   45689\r\n67551   96019\r\n12741   12527\r\n78583   25891\r\n26961   17506\r\n78162   56028\r\n80916   83853\r\n98196   76265\r\n58308   16344\r\n40122   58950\r\n53743   21620\r\n24428   86026\r\n78836   73860\r\n10212   38302\r\n19115   36550\r\n15104   93723\r\n16369   51410\r\n68786   14006\r\n43892   40408\r\n23295   29751\r\n91988   79020\r\n20067   54727\r\n43312   77912\r\n68147   71902\r\n13779   32131\r\n94847   40408\r\n91423   73498\r\n69229   13900\r\n25697   72238\r\n99306   63294\r\n66446   48149\r\n69853   29710\r\n92750   51625\r\n81823   55419\r\n36427   15068\r\n86459   66813\r\n48199   81641\r\n20218   56086\r\n83018   39032\r\n72219   50770\r\n94256   93723\r\n32003   39207\r\n47335   14006\r\n42785   62691\r\n74560   63579\r\n27781   86649\r\n15494   13647\r\n92404   45629\r\n84689   85500\r\n17033   21765\r\n10332   13027\r\n35398   79463\r\n92891   79965\r\n33833   48986\r\n55107   99914\r\n57461   88727\r\n60916   87668\r\n79014   20602\r\n17965   13027\r\n10123   29710\r\n36522   46583\r\n83178   51594\r\n92593   37792\r\n38714   21861\r\n40023   13395\r\n72206   73081\r\n36381   75286\r\n90435   26071\r\n97471   69336\r\n97952   40145\r\n56034   20097\r\n13292   81538\r\n20477   50770\r\n11873   77989\r\n60247   50523\r\n67149   48592\r\n49108   68874\r\n68890   87402\r\n40881   94963\r\n35432   13027\r\n39476   47915\r\n90012   54566\r\n92534   48674\r\n92032   50770\r\n27585   79761\r\n37875   37853\r\n89774   13027\r\n61075   15674\r\n60756   87360\r\n47898   92766\r\n96598   68826\r\n50236   47764\r\n55057   70249\r\n54727   17366\r\n13681   54727\r\n17072   77525\r\n42614   90096\r\n98669   82051\r\n57089   13900\r\n18696   54195\r\n94345   35225\r\n44841   88536\r\n38879   23114\r\n83766   94182\r\n58826   99914\r\n41811   85416\r\n72019   50770\r\n38976   86649\r\n42451   59949\r\n14546   55721\r\n99835   97560\r\n49639   30033\r\n73524   60863\r\n65556   87850\r\n96707   58953\r\n27288   74220\r\n46483   15656\r\n72352   96712\r\n32100   70249\r\n63167   14314\r\n16622   95903\r\n19000   15656\r\n42483   78654\r\n54025   76612\r\n70377   60749\r\n39261   36106\r\n21224   96019\r\n50908   82897\r\n33035   16572\r\n96495   31039\r\n58082   88727\r\n81593   19590\r\n35755   54727\r\n67526   44620\r\n72752   89000\r\n83650   17979\r\n70801   85100\r\n25664   39700\r\n44529   12527\r\n59027   70249\r\n16374   51410\r\n80656   73108\r\n66428   70249\r\n13405   29710\r\n24375   51410\r\n68087   40408\r\n76117   48681\r\n94015   65689\r\n76691   16635\r\n99054   13378\r\n30917   90481\r\n96893   25891\r\n62567   21627\r\n94245   10321\r\n14080   40408\r\n49942   29710\r\n27954   25201\r\n75660   93412\r\n78795   88727\r\n77270   88727\r\n85985   42151\r\n30119   46470\r\n24570   15656\r\n38301   25919\r\n60012   82323\r\n17386   61141\r\n41982   15656\r\n52502   14428\r\n40518   16829\r\n67678   88727\r\n98468   67870\r\n58153   18953\r\n99115   15112\r\n46175   92280\r\n76963   70249\r\n47731   85214\r\n23760   73422\r\n67026   30272\r\n60174   27340\r\n53612   13317\r\n54298   88727\r\n96019   77912\r\n38623   64924\r\n64015   99483\r\n78520   32003\r\n55419   65046\r\n16763   77012\r\n79038   70196\r\n10821   93823\r\n21975   92009\r\n59774   70249\r\n49520   59948\r\n23429   74262\r\n74297   84035\r\n60268   86649\r\n97106   70249\r\n67040   13027\r\n64952   32110\r\n28218   14006\r\n40852   83878\r\n14006   78414\r\n71194   95950\r\n49032   88536\r\n93565   76366\r\n87180   54727\r\n44863   27608\r\n45305   75367\r\n92628   30076\r\n53704   25974\r\n98469   33452\r\n59903   54979\r\n10499   20819\r\n83104   67143\r\n96322   65569\r\n32582   14006\r\n56098   93723\r\n94744   60959\r\n87479   15950\r\n89231   11601\r\n50869   70404\r\n38814   73422\r\n32132   73422\r\n74145   35520\r\n90512   88727\r\n70617   38209\r\n58298   48954\r\n56952   29710\r\n68984   70249\r\n72264   56329\r\n58999   54727\r\n48633   42365\r\n56154   57575\r\n24276   54727\r\n24166   14006\r\n43755   59506\r\n14184   65569\r\n89299   31443\r\n44142   46882\r\n91129   86649\r\n85560   86681\r\n64723   14006\r\n15506   10738\r\n48493   71902\r\n66107   48245\r\n91213   16367\r\n52172   54762\r\n57989   56463\r\n12155   82395\r\n77388   25091\r\n43192   47163\r\n72417   30734\r\n49430   71902\r\n70268   85100\r\n44133   81902\r\n19946   82107\r\n39220   51410\r\n28498   29710\r\n50770   27829\r\n95962   15656\r\n61245   14960\r\n74434   46710\r\n21991   30826";
        
        public static void Solve()
        {
            Console.WriteLine("Solving Advent of Code day 1");
            Stopwatch sw = Stopwatch.StartNew();
            var (leftArray, rightArray) = ParseInput();
            int[] leftList = leftArray;
            int[] rightList = rightArray;
            int result = PartOne(leftList, rightList);
            sw.Stop();
            Console.WriteLine($"Result of first part: {result} solved in {sw.ElapsedMilliseconds}ms");
            sw.Restart();
            result = PartTwo(leftList, rightList);
            sw.Stop();
            Console.WriteLine($"Result of second part: {result} solved in {sw.ElapsedMilliseconds}ms");
        }

        private static (int[] leftArray, int[] rightArray) ParseInput()
        {
            string[] dividedList = Input.Replace("\r", "").Replace("\n", "   ").Split([' '], StringSplitOptions.RemoveEmptyEntries);
            int[] leftList = new int[dividedList.Length / 2];
            int[] rightList = new int[dividedList.Length / 2];
            int leftListIndex = 0;
            int rightListIndex = 0;
            for (int i = 0; i < dividedList.Length; i++)
            {
                int value = int.Parse(dividedList[i]);
                if (i % 2 == 0)
                {
                    leftList[leftListIndex] = value;
                    leftListIndex++;
                }
                else
                {
                    rightList[rightListIndex] = value;
                    rightListIndex++;
                }
            }
            return (leftList, rightList);
        }

        private static int PartOne(int[] leftList, int[] rightList)
        {
            leftList = [.. leftList.OrderBy(x => x)];
            rightList = [.. rightList.OrderBy(x => x)];
            int result = 0;
            for (int i = 0; i < leftList.Length; i++)
            {
                result += Math.Abs(leftList[i] - rightList[i]);
            }
            return result;
        }

        private static int PartTwo(int[] leftList, int[] rightList)
        {
            Dictionary<int, int> pairs = [];
            for (int i = 0; i < leftList.Length; i++)
            {
                for (int j = 0; j < rightList.Length; j++)
                {
                    if (leftList[i] == rightList[j])
                    {
                        if (!pairs.TryAdd(leftList[i], 1))
                        {
                            pairs[leftList[i]]++;
                        }
                    }
                }
            }
            int result = 0;
            foreach (var pair in pairs)
            {
                result += pair.Key * pair.Value;
            }
            return result;
        }
    }
}
